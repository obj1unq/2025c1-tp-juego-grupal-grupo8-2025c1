import src.estadoDeJuego.*
import src.escena.*
import pantallainicial.*
import pulpoGame.*
import pulpo.*
import tiburon.*
import red.*
import entrada.*

describe "Colisiones"{ 
   
   const tiburon = new Tiburon()
   const pulpin  = new Pulpo()
   const pulpon  = new PulpoDos()
   const red     = new Red()

    method initialize(){
        estadoDeJuego.inicializar()
    }
   
test "1.1 Cambio de escena" {
     
    estadoDeJuego.cambiarAEscena(escenaJuegoDosJugadores)
    assert.equals(escenaJuegoDosJugadores, estadoDeJuego.escenaActiva())
    estadoDeJuego.cambiarAEscena(escenaJuegoUnJugador)
    assert.equals(escenaJuegoUnJugador, estadoDeJuego.escenaActiva())

}

test "1.2 colision por tiburon un jugador" {

    pulpin.puntaje(200)
    assert.equals(escenaJuegoUnJugador, estadoDeJuego.escenaActiva())
    tiburon.colision(pulpin)
    assert.equals(200, pulpin.puntaje())
}

test "1.3 colision por tiburon dos jugadores" {

    pulpin.puntaje(200)
    pulpon.puntaje(500)
    estadoDeJuego.cambiarAEscena(escenaJuegoDosJugadores)
    assert.equals(escenaJuegoDosJugadores, estadoDeJuego.escenaActiva())
    tiburon.colision(pulpin)
    assert.equals(50, pulpin.puntaje())
    tiburon.colision(pulpon)
    assert.equals(350, pulpon.puntaje())
}


test "1.4 penalizacion por tiburon ambos jugadores" {

    pulpin.iniciarPenalizacion()
    assert.equals("jugador1choque.png", pulpin.image())
    pulpin.estado(vivo)
    assert.equals("jugador1.png", pulpin.image())
    
    pulpon.iniciarPenalizacion()
    assert.equals("jugador2choque.png", pulpon.image())
    pulpon.estado(vivo)
    assert.equals("jugador2.png", pulpon.image())
}
    
    test "1.5 colision con pez venenoso, y se cura cuando colisiona al pez curativo" {

    pulpin.envenenar()
    assert.equals("pulpoEnvenenado.png", pulpin.image())
    pulpin.curar()
    assert.equals("jugador1.png", pulpin.image())    

    pulpon.envenenar()
    assert.equals("pulpoEnvenenadodoss.png", pulpon.image())
    pulpon.curar()
    assert.equals("jugador2.png", pulpon.image())    
    }


    test "1.6 colision con red ambos jugadores" {
    pulpin.atraparsePorRed(red)
    assert.equals("pulpoAtrapado.png", pulpin.image())
    assert.equals(atrapado,pulpin.estado())

    pulpon.atraparsePorRed(red)
    assert.equals("pulpoDosAtrapado.png", pulpon.image())
    assert.equals(atrapado,pulpon.estado())
    }

    test "1.7 penalizacion por red ambos jugadores" {

        pulpin.iniciarPenalizacion()
        assert.equals("jugador1choque.png", pulpin.image())
        pulpin.estado(vivo)
        assert.equals("jugador1.png", pulpin.image())
    
        pulpon.iniciarPenalizacion()
        assert.equals("jugador2choque.png", pulpon.image())
        pulpon.estado(vivo)
        assert.equals("jugador2.png", pulpon.image())
        
    }
}
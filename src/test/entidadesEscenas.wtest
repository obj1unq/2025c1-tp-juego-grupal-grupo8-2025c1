import src.entidad.*
import src.escena.*
import src.estadoDeJuego.*

// Escena vacía
object escenaTest inherits Escena {}

class EntidadTest inherits Entidad {
    method position() = game.at(0, 0)
}

describe "Entidades y Escenas" {
    const entidad = new EntidadTest()

    method initialize(){
        // Cambiar escena activa por escenaTest
        estadoDeJuego.inicializar()
        estadoDeJuego.cambiarAEscena(escenaTest)
    }

    // Entidades y escenas
    test "1.1 Se agrega a la escena correctamente" {
        assert.equals(null, entidad.escena())
        escenaTest.agregarEntidad(entidad)
        assert.equals(escenaTest, entidad.escena())
    }

    test "1.2 No puede estar en la escena dos veces"{
        assert.equals(null, entidad.escena())
        escenaTest.agregarEntidad(entidad)
        assert.equals(escenaTest, entidad.escena())
        assert.throwsException({escenaTest.agregarEntidad(entidad)})
    }

    test "1.3 Se quita de la escena correctamente"{
        assert.equals(null, entidad.escena())
        escenaTest.agregarEntidad(entidad)
        assert.equals(escenaTest, entidad.escena())
        escenaTest.quitarEntidad(entidad)
        assert.equals(null, entidad.escena())
    }

    test "1.4 No se quita de la escena si no está en la escena"{
        assert.equals(null, entidad.escena())
        assert.throwsException({escenaTest.quitarEntidad(entidad)})
    }

    // Escenas y estado de juego
    test "2.1 Se vacía la escena al cambiar"{
        assert.equals(#{}, escenaTest.entidades())
        escenaTest.agregarEntidad(entidad)
        assert.equals(#{entidad}, escenaTest.entidades())
        estadoDeJuego.cambiarAEscena(escenaJuegoUnJugador)
        assert.equals(#{}, escenaTest.entidades())
    }

    test "2.2 Se vacía la escena al recargar" {
        assert.equals(#{}, escenaTest.entidades())
        escenaTest.agregarEntidad(entidad)
        assert.equals(#{entidad}, escenaTest.entidades())
        estadoDeJuego.recargarEscena()
        assert.equals(#{}, escenaTest.entidades())
    }

    test "2.3 Se establece correctamente la escena activa"{
        assert.equals(true, escenaTest.activa())
        assert.equals(false, escenaJuegoUnJugador.activa())
        estadoDeJuego.cambiarAEscena(escenaJuegoUnJugador)
        assert.equals(false, escenaTest.activa())
        assert.equals(true, escenaJuegoUnJugador.activa())
        estadoDeJuego.recargarEscena()
        assert.equals(false, escenaTest.activa())
        assert.equals(true, escenaJuegoUnJugador.activa())
    }
}